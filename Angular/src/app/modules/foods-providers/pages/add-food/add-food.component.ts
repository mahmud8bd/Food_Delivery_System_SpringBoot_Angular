import { Component } from '@angular/core';
import { ProvidersService } from '../../services/providers.service';
import { Foods } from 'src/app/modules/share/models/foods';
import { Router } from '@angular/router';
import { Observable } from 'rxjs';
import { ImageUploadService } from 'src/app/modules/share/service/image-upload.service';
import { HttpEventType, HttpResponse } from '@angular/common/http';
import { AutoIdService } from 'src/app/modules/share/service/auto-id.service';

@Component({
  selector: 'app-add-food',
  templateUrl: './add-food.component.html',
  styleUrls: ['./add-food.component.css']
})
export class AddFoodComponent {
    foodId: any; //auto
    foodName: any;
    foodType: any;
    foodDescription: any;
    foodPrice: any;
    foodDiscount: any;
    foodDiscountPrice: any;

    shopId: any; //from database
    shopName: any; //from database
    shopAddress: any; //from database
    action: any; //from database
    quantity:any; 

    foods:any;
    shop:any;

    selectedFiles?: FileList;
    currentFile?: File;
    preview = '';
    imageInfos?: Observable<any>;

    constructor(private autoIdService: AutoIdService, private providerService:ProvidersService, private router:Router , private imageUploadService: ImageUploadService){}

    ngOnInit(){
      this.generateId();
      let shopUserName = localStorage.getItem("shopUsername");
      this.providerService.getShopByUsername(shopUserName)
      .subscribe((data)=>{
        this.shop = data;
        this.shopId = this.shop.shopId;
        this.shopName = this.shop.shopFullName;
        // this.shopUserName = this.shop.shopUserName;
        // this.shopType = this.shop.shopType;
        // this.shopEmail = this.shop.shopEmail;
        // this.shopPhone = this.shop.shopPhone;
        this.shopAddress = this.shop.shopAddress;
        // this.shopPassword = this.shop.shopPassword;
      });
    }

    addFood(){
      this.foods = new Foods(this.foodId,this.foodName,this.foodType,this.foodDescription,this.foodPrice, this.foodDiscount , this.foodDiscountPrice, this.shopId, this.shopName, this.shopAddress, this.action, this.quantity);
      this.providerService.addfood(this.foods)
      .subscribe((data)=> console.log("success" ,data));
      this.upload();
      this.router.navigate(['provider','shop','viewfoods']);
    }

    selectFile(event: any): void {
      this.preview = '';
      this.selectedFiles = event.target.files;
  
      if (this.selectedFiles) {
        const file: File | null = this.selectedFiles.item(0);
  
        if (file) {
          this.preview = '';
          this.currentFile = file;
          const reader = new FileReader();
  
          reader.onload = (e: any) => {
            console.log(e.target.result);
            this.preview = e.target.result;
          };
          reader.readAsDataURL(this.currentFile);
        }
      }
    }
  
    upload(): void {
      if (this.selectedFiles) {
        const file: File | null = this.selectedFiles.item(0);
  
        if (file) {
          this.currentFile = file;
  
          this.imageUploadService.upload(this.currentFile, this.foodId).subscribe({
            next: (event: any) => {
              if (event.type === HttpEventType.UploadProgress) {
              } else if (event instanceof HttpResponse) {
                this.imageInfos = this.imageUploadService.getFiles();
              }
            },
            error: (err: any) => {
              this.currentFile = undefined;
            },
          });
        }
        this.selectedFiles = undefined;
      }
      this.preview = '';
    }

    generateId() {
      const tableName = 'foods';
      const idName = 'food_id';
      const word = 'FD-';
  
      this.autoIdService.getAutoGeneratedId(tableName, idName, word).subscribe(
        (response: any) => {
          this.foodId = response; // Since the response is plain text, directly assign it to 'autogeneratedId'.
        },
        (error: any) => {
          console.error('Error generating ID:', error);
        }
      );
    }
}
